name: Release

on:
  push:
    branches:
      - 'releases/**'

jobs:
  build:
    name: Build Server
    runs-on: ubuntu-latest
    if: github.event.created == true
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - uses: jvalkeal/setup-maven@v1
      with:
        maven-version: 3.6.2
    - uses: jfrog/setup-jfrog-cli@v1
      with:
        version: 1.36.0
      env:
        JF_ARTIFACTORY_SPRING: ${{ secrets.JF_ARTIFACTORY_SECRET_SPRING }}
    - name: Configure JFrog Cli
      run: |
        jfrog rt mvnc --server-id-resolve=spring --repo-resolve-releases=libs-spring-dataflow --repo-resolve-snapshots=libs-spring-dataflow --server-id-deploy=spring --repo-deploy-snapshots=libs-spring-dataflow --repo-deploy-releases=libs-spring-dataflow
    - name: Extract Version
      id: extract
      run: |
        echo ::set-output name=RELEASE_BRANCH::${GITHUB_REF#refs/heads/releases/}
    - name: Configure Release Version
      env:
        RELEASE_BRANCH: ${{ steps.extract.outputs.RELEASE_BRANCH }}
      run: |
        mvn versions:set -DgenerateBackupPoms=false -DnewVersion=$RELEASE_BRANCH
    - name: Build and Publish
      run: jfrog rt mvn -U -B clean install
    - name: Tag Release
      if: ${{ success() }}
      env:
        RELEASE_BRANCH: ${{ steps.extract.outputs.RELEASE_BRANCH }}
      run: |
        git config --global user.name 'Spring Buildmaster'
        git config --global user.email 'buildmaster@springframework.org'
        git add .
        git checkout -b $RELEASE_BRANCH
        git commit -m "Release $RELEASE_BRANCH"
        git push origin $RELEASE_BRANCH
        git tag "v$RELEASE_BRANCH"
        git push --tags origin
